[{"assignees":[],"body":"## Description\nCreate an automated pipeline to validate book content quality, metadata consistency, and asset integrity before publication.\n\n## Acceptance Criteria\n- [ ] Content format validation (text structure, metadata completeness)\n- [ ] Asset validation (audio file integrity, cover image quality)\n- [ ] Cross-reference validation between text and audio timestamps\n- [ ] Automated content quality scoring\n- [ ] Validation reporting and approval workflow\n- [ ] Integration with content management system\n\n## Technical Considerations\nShould integrate with content management system (#58) and use structured logging for validation results.\n\n## Dependencies\n- Content Management System (#58)\n- Vercel Blob Storage Setup (#25)\n\n## Business Value\nEnsures consistent content quality and reduces manual review overhead for content publication.","closedAt":null,"createdAt":"2025-06-06T14:44:34Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":76,"state":"OPEN","title":"Implement Automated Content Validation Pipeline"},{"assignees":[],"body":"## Description\nEstablish a comprehensive error handling strategy that provides consistent error experiences across frontend, backend, and external integrations.\n\n## Acceptance Criteria\n- [ ] Standardized error types and error hierarchy\n- [ ] Error boundary implementation for React components\n- [ ] API error response standardization with correlation IDs\n- [ ] User-friendly error messages with actionable guidance\n- [ ] Error logging with structured data and context\n- [ ] Error recovery mechanisms where appropriate\n\n## Technical Considerations\nMust integrate with structured logging (#20) and correlation ID propagation (#22). Should implement 'fail-fast-validation' binding.\n\n## Dependencies\n- Structured Logging Implementation (#20)\n- API Error Handling Standardization (#29)\n\n## Business Value\nImproves user experience during error conditions and reduces support burden through clear error communication.","closedAt":null,"createdAt":"2025-06-06T02:08:45Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":75,"state":"OPEN","title":"Implement Unified Error Handling Strategy Across All Layers"},{"assignees":[],"body":"## Description\nImplement comprehensive internationalization support to enable multi-language book content and UI localization.\n\n## Acceptance Criteria\n- [ ] Next.js i18n configuration with locale routing\n- [ ] Translation infrastructure for UI components\n- [ ] Book content localization support\n- [ ] RTL (right-to-left) language support\n- [ ] Currency and date formatting localization\n- [ ] Automated translation management workflow\n\n## Technical Considerations\nMust work with existing translation data structure and support both UI and book content translations.\n\n## Dependencies\n- Existing translation infrastructure review\n- Content Management System (#58)\n\n## Business Value\nEnables global market expansion and accessibility for non-English speaking users.","closedAt":null,"createdAt":"2025-06-06T02:08:42Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":74,"state":"OPEN","title":"Implement Comprehensive Internationalization (i18n) Infrastructure"},{"assignees":[],"body":"## Description\nCreate a comprehensive design system foundation that extends beyond atomic design to include typography, color systems, spacing, and interaction patterns.\n\n## Acceptance Criteria\n- [ ] Design tokens defined for colors, typography, spacing, and shadows\n- [ ] Theme provider implementation with dark/light mode support\n- [ ] Typography scale and component variants\n- [ ] Comprehensive Storybook documentation\n- [ ] Design system guidelines and usage documentation\n- [ ] Integration with Tailwind CSS configuration\n\n## Technical Considerations\nShould integrate with existing atomic design structure (#23, #42) and support future internationalization needs.\n\n## Dependencies\n- Foundational Atomic Design Structure (#23)\n- Storybook Setup (#24)\n\n## Business Value\nEnsures consistent user experience, improves development velocity, and supports brand consistency across the platform.","closedAt":null,"createdAt":"2025-06-06T02:08:26Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":73,"state":"OPEN","title":"Establish Comprehensive Design System Foundation"},{"assignees":[],"body":"## Description\nDesign and implement a database architecture to support user accounts, reading progress, content management, and future features.\n\n## Acceptance Criteria\n- [ ] Database schema design for users, books, reading progress, and content\n- [ ] Data migration strategy and tooling\n- [ ] Database access layer with proper abstraction\n- [ ] Performance optimization and indexing strategy\n- [ ] Backup and recovery procedures\n- [ ] Environment-specific configuration\n\n## Technical Considerations\nMust support the planned user accounts (#57) and content management (#58) features. Should implement proper separation of concerns and dependency inversion.\n\n## Dependencies\n- User Accounts planning (#57)\n- Content Management System (#58)\n\n## Business Value\nEnables persistent user data, reading progress tracking, and supports future business features and analytics.","closedAt":null,"createdAt":"2025-06-06T02:08:23Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQLbA","name":"size:xl","description":"Very large changes (major architectural changes)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":72,"state":"OPEN","title":"Design and Implement Database Architecture for Scalable Features"},{"assignees":[],"body":"## Description\nImplement comprehensive monitoring and alerting for application health, performance, errors, and business metrics in production.\n\n## Acceptance Criteria\n- [ ] Application health monitoring and uptime checks\n- [ ] Error rate and performance alerting\n- [ ] Business metrics tracking (user engagement, content consumption)\n- [ ] Log aggregation and analysis setup\n- [ ] Alert escalation and notification system\n- [ ] Monitoring dashboard for operational visibility\n\n## Technical Considerations\nMust integrate with structured logging (#20) and correlation ID propagation (#22). Should provide operational visibility for production deployment.\n\n## Dependencies\n- Structured Logging Implementation (#20)\n- Performance Monitoring Setup (#60)\n\n## Business Value\nEnables proactive issue detection and resolution, reducing downtime and improving user experience.","closedAt":null,"createdAt":"2025-06-06T02:08:07Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":71,"state":"OPEN","title":"Implement Production-Ready Monitoring and Alerting System"},{"assignees":[],"body":"## Description\nEstablish comprehensive performance baselines and implement continuous monitoring to detect regressions and optimize user experience.\n\n## Acceptance Criteria\n- [ ] Core Web Vitals baseline measurement and tracking\n- [ ] Performance budgets for bundle size, load times, and interaction metrics\n- [ ] Automated performance testing in CI pipeline\n- [ ] Performance regression detection and alerting\n- [ ] Performance metrics dashboard\n- [ ] Mobile and desktop performance optimization\n\n## Technical Considerations\nShould integrate with existing performance monitoring setup (#60) and provide foundation for future performance optimizations.\n\n## Dependencies\n- Basic CI Pipeline Setup (#13)\n- Performance Monitoring Setup (#60)\n\n## Business Value\nEnsures optimal user experience and prevents performance regressions that could impact user retention and SEO.","closedAt":null,"createdAt":"2025-06-06T02:08:04Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":70,"state":"OPEN","title":"Establish Performance Baseline and Continuous Monitoring"},{"assignees":[],"body":"## Description\nImplement comprehensive security headers, Content Security Policy, and OWASP compliance measures as a foundation for the security audit.\n\n## Acceptance Criteria\n- [ ] Content Security Policy (CSP) implementation\n- [ ] HTTP security headers (HSTS, X-Frame-Options, etc.)\n- [ ] OWASP Top 10 compliance verification\n- [ ] Rate limiting on API endpoints\n- [ ] Input sanitization and validation\n- [ ] Security testing in CI pipeline\n\n## Technical Considerations\nThis is a prerequisite for the security audit (#63) and should implement 'fail-fast-validation' and 'no-secret-suppression' bindings.\n\n## Dependencies\n- API Routes refactoring (#17, #18)\n- Input validation implementation (#28)\n\n## Business Value\nEssential for production deployment and user data protection. Reduces security vulnerabilities and compliance risks.","closedAt":null,"createdAt":"2025-06-06T02:07:47Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":69,"state":"OPEN","title":"Implement Comprehensive Security Headers and OWASP Compliance"},{"assignees":[],"body":"## Description\nPerform a systematic review of the entire codebase to assess adherence to Leyline philosophy tenets and bindings, identifying gaps and creating a remediation roadmap.\n\n## Acceptance Criteria\n- [ ] Audit all core Leyline bindings for compliance (no-internal-mocking, dependency-inversion, structured-logging, etc.)\n- [ ] Document specific violations with file locations and severity\n- [ ] Create prioritized remediation plan with effort estimates\n- [ ] Establish compliance tracking metrics and monitoring\n- [ ] Generate compliance report with recommendations\n\n## Technical Considerations\nReview adherence to specific bindings: no-internal-mocking, pure-functions, explicit-over-implicit, automated-quality-gates, dependency-inversion.\n\n## Dependencies\n- Review of existing codebase\n- Understanding of all Leyline bindings\n\n## Business Value\nEnsures code quality, maintainability, and alignment with development philosophy, reducing long-term technical debt.","closedAt":null,"createdAt":"2025-06-06T02:07:44Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":68,"state":"OPEN","title":"Conduct Comprehensive Leyline Philosophy Compliance Audit"},{"assignees":[],"body":"## Description\nEnable TypeScript strict mode with zero tolerance for any bypasses, implementing the 'no-any' Leyline binding across the entire codebase.\n\n## Acceptance Criteria\n- [ ] tsconfig.json configured with strict: true and all related strict flags\n- [ ] Zero TypeScript errors or warnings across entire codebase\n- [ ] No usage of 'any' type anywhere in the codebase\n- [ ] CI pipeline fails on any TypeScript violations\n- [ ] Type safety validation in pre-commit hooks\n\n## Technical Considerations\nThis implements the 'explicit-over-implicit' tenet and 'no-any' binding. May require significant refactoring of existing code.\n\n## Dependencies\n- Current TypeScript configuration review\n- API refactoring completion (#17, #18)\n\n## Business Value\nPrevents runtime errors, improves code maintainability, and enhances developer experience through better IDE support.","closedAt":null,"createdAt":"2025-06-06T02:07:20Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":67,"state":"OPEN","title":"Implement Zero-Tolerance TypeScript Strict Mode Migration"},{"assignees":[],"body":"## Feature Description\n\nTransform the reading platform into a Progressive Web App with offline reading capabilities, app-like experience, and installation support.\n\n## Acceptance Criteria\n\n- [ ] Service worker implementation for offline functionality\n- [ ] App manifest with proper icons and metadata\n- [ ] Offline reading for downloaded books\n- [ ] Cache management for text and audio content\n- [ ] Install prompt and app-like experience\n- [ ] Background sync for reading progress\n\n## Technical Considerations\n\nEssential for a reading platform to provide app-like experience and offline reading. Should leverage existing asset management infrastructure.\n\n## Dependencies\n\n- Content Management System (#58)\n- Reading Progress Tracking (#62)\n- Performance Monitoring (#60)\n\n## Business Value\n\nSignificantly improves user experience by enabling offline reading and app-like interaction, increasing user engagement and retention.","closedAt":null,"createdAt":"2025-06-05T20:11:02Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":65,"state":"OPEN","title":"Implement Progressive Web App (PWA) Capabilities"},{"assignees":[],"body":"## Feature Description\n\nCreate comprehensive local development setup documentation and onboarding guide for new contributors.\n\n## Acceptance Criteria\n\n- [ ] Step-by-step setup instructions for all environments\n- [ ] Prerequisites and system requirements\n- [ ] Environment variable configuration guide\n- [ ] Common troubleshooting solutions\n- [ ] Development workflow documentation\n- [ ] Quick start guide for making first contribution\n\n## Technical Considerations\n\nImproves developer experience and reduces onboarding friction. Should be kept current with infrastructure changes.\n\n## Dependencies\n\n- CONTRIBUTING.md creation (#34)\n- CI/CD setup completion","closedAt":null,"createdAt":"2025-06-05T19:40:39Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFQBGw","name":"type:docs","description":"Documentation improvements","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"}],"milestone":null,"number":64,"state":"OPEN","title":"Setup Local Development Documentation and Onboarding"},{"assignees":[],"body":"## Feature Description\n\nConduct comprehensive security audit beyond basic npm audit, including dependency scanning, code analysis, and penetration testing preparation.\n\n## Acceptance Criteria\n\n- [ ] OWASP security assessment\n- [ ] Dependency vulnerability scanning (Snyk/GitHub Security)\n- [ ] Security headers implementation\n- [ ] Content Security Policy (CSP) configuration\n- [ ] Rate limiting on API endpoints\n- [ ] Security testing in CI pipeline\n\n## Technical Considerations\n\nEssential for production deployment. Should be integrated into CI/CD pipeline for continuous security monitoring.\n\n## Dependencies\n\n- API Routes refactoring (#17-18)\n- Basic CI Pipeline Setup (#13)","closedAt":null,"createdAt":"2025-06-05T19:38:55Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7CQ","name":"priority:critical","description":"Critical issues requiring immediate attention","color":"FF0000"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":63,"state":"OPEN","title":"Implement Security Audit and Vulnerability Assessment"},{"assignees":[],"body":"## Feature Description\n\nAdd functionality to track and persist user reading progress across sessions, including bookmark management and reading position memory.\n\n## Acceptance Criteria\n\n- [ ] Track reading position within chapters\n- [ ] Persist reading progress locally (localStorage)\n- [ ] Visual progress indicators\n- [ ] Resume reading from last position\n- [ ] Reading statistics and history\n- [ ] Export/import reading progress\n\n## Technical Considerations\n\nEssential UX feature for a reading platform. Should work without user accounts initially, with future sync capability.\n\n## Dependencies\n\n- UI for Book Selection & Content Display (#33)\n- Local storage management utilities","closedAt":null,"createdAt":"2025-06-05T19:20:41Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":62,"state":"OPEN","title":"Implement Reading Progress Tracking and Persistence"},{"assignees":[],"body":"## Feature Description\n\nGenerate comprehensive API documentation using OpenAPI/Swagger specification for all API endpoints to improve maintainability and developer experience.\n\n## Acceptance Criteria\n\n- [ ] OpenAPI 3.0 specification for all API routes\n- [ ] Interactive API documentation (Swagger UI)\n- [ ] API schema validation\n- [ ] Example requests and responses\n- [ ] API versioning strategy\n- [ ] Documentation deployment automation\n\n## Technical Considerations\n\nCritical for API maintainability and future integrations. Should be automatically generated from code annotations.\n\n## Dependencies\n\n- API Routes refactoring (#17-18)\n- Standardize API Error Handling (#29)","closedAt":null,"createdAt":"2025-06-05T19:19:53Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFQBGw","name":"type:docs","description":"Documentation improvements","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQPNA","name":"domain:api","description":"API-related changes","color":"5319E7"}],"milestone":null,"number":61,"state":"OPEN","title":"Create API Documentation with OpenAPI/Swagger"},{"assignees":[],"body":"## Feature Description\n\nImplement comprehensive performance monitoring to track Core Web Vitals, user experience metrics, and application performance in production with baseline establishment.\n\n## Acceptance Criteria\n\n- [ ] Core Web Vitals monitoring (LCP, FID, CLS) with historical tracking\n- [ ] Performance metrics dashboard with real-time visualization\n- [ ] Alert system for performance degradation with configurable thresholds\n- [ ] Performance budgets and thresholds with automated enforcement\n- [ ] Integration with deployment pipeline for regression detection\n- [ ] Performance regression detection with automated rollback triggers\n- [ ] Real User Monitoring (RUM) integration for production insights\n- [ ] Performance correlation with business metrics and user behavior\n- [ ] Automated performance optimization recommendations\n\n## Technical Considerations\n\nEssential for production deployment and user experience optimization. Should integrate with existing CI/CD pipeline and provide comprehensive operational visibility.\n\n## Dependencies\n\n- Basic CI Pipeline Setup (#13)\n- Performance Baseline Establishment (new issue to be created)\n- Production deployment strategy\n\n## Business Value\n\nEnsures optimal user experience, prevents performance regressions affecting retention, and provides data-driven optimization insights.","closedAt":null,"createdAt":"2025-06-05T19:19:49Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":60,"state":"OPEN","title":"Setup Performance Monitoring and Core Web Vitals Tracking"},{"assignees":[],"body":"## Feature Description\n\nAdd comprehensive search capabilities allowing users to find books by title, author, content, or metadata across the entire library with advanced filtering and analytics.\n\n## Acceptance Criteria\n\n- [ ] Full-text search across book content with relevance ranking\n- [ ] Metadata search (title, author, genre, etc.) with faceted navigation\n- [ ] Search result highlighting and intelligent ranking algorithms\n- [ ] Search filters and faceted navigation with multiple criteria\n- [ ] Search performance optimization for large content libraries\n- [ ] Mobile-responsive search interface with touch-friendly controls\n- [ ] Search result analytics and optimization tracking\n- [ ] Saved searches and search history functionality\n- [ ] Search suggestion and autocomplete with typo tolerance\n\n## Technical Considerations\n\nCore user need for content discovery. Should be performant and accessible. Search indexing strategy must consider client-side vs server-side performance implications. Performance considerations for large content libraries are critical.\n\n## Dependencies\n\n- UI for Book Selection & Content Display (#33)\n- Content Management System (#58)\n- Database Architecture Planning (new issue to be created)\n\n## Business Value\n\nEssential for content discoverability and user engagement. Improves user experience and content consumption metrics.","closedAt":null,"createdAt":"2025-06-05T19:18:11Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":59,"state":"OPEN","title":"Implement Search Functionality for Books and Content"},{"assignees":[],"body":"## Feature Description\n\nDevelop a comprehensive content management interface for editors to add new books, manage translations, and upload associated assets without requiring developer intervention.\n\n## Acceptance Criteria\n\n- [ ] Admin interface for adding new books with comprehensive metadata\n- [ ] Upload system for text files, audio files, and cover images with validation\n- [ ] Content validation and preview functionality with quality checks\n- [ ] Integration with existing translation data structure\n- [ ] Version control for content updates with rollback capability\n- [ ] Content approval workflow with multi-stage review process\n- [ ] Batch content upload and processing capabilities\n- [ ] Content validation pipeline integration\n- [ ] Asset integrity verification and optimization\n- [ ] Content preview and approval workflow implementation\n\n## Technical Considerations\n\nEssential for scaling content without developer bottleneck. Should integrate with existing asset management and Blob storage infrastructure. Must include comprehensive validation and quality assurance workflows.\n\n## Dependencies\n\n- Vercel Blob Storage Setup (#25)\n- API Routes refactoring (#17-18)\n- Content Validation Pipeline (new issue to be created)\n- Database Architecture Planning (new issue to be created)\n- User authentication system (for admin access)\n\n## Business Value\n\nCritical for content scaling and operational efficiency. Removes developer bottleneck from content publication process and enables content quality assurance.","closedAt":null,"createdAt":"2025-06-05T19:18:05Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":58,"state":"OPEN","title":"Implement Content Management System for Adding New Books"},{"assignees":[],"body":"## Feature Description\n\nEnable personalization, user retention, and cross-device synchronization through comprehensive user account functionality with significant business value potential.\n\n## Acceptance Criteria\n\n- [ ] Secure authentication system implemented with 2FA support\n- [ ] User profile management UI created with privacy controls\n- [ ] Database schema extensions for user data with GDPR compliance\n- [ ] Backend APIs for managing user data with proper security\n- [ ] UI integration for login/signup with accessibility considerations\n- [ ] Cross-device synchronization of reading state with conflict resolution\n- [ ] Password policies and security requirements implementation\n- [ ] Data privacy and GDPR compliance measures\n- [ ] User data export and deletion capabilities\n\n## Technical Considerations\n\nSignificant business value potential through increased engagement and user retention. Must integrate with planned database architecture and implement proper security measures.\n\n## Dependencies\n\n- Database Architecture Planning (new issue to be created)\n- Secure API Authentication setup\n- Reading Progress Tracking (#62)\n\n## Business Value\n\nEnables user retention, personalization, cross-device sync, and forms foundation for future monetization features. High business value that was previously under-prioritized.","closedAt":null,"createdAt":"2025-06-05T16:53:10Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQLbA","name":"size:xl","description":"Very large changes (major architectural changes)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":57,"state":"OPEN","title":"User Accounts & Reading History/Bookmarks"},{"assignees":[],"body":"## Feature Description\n\nGain insights into real-world user performance (Core Web Vitals) and capture frontend errors with rich context.\n\n## Acceptance Criteria\n\n- [ ] RUM tool integrated to track Core Web Vitals\n- [ ] Enhanced error tracking service integrated (Sentry/LogRocket)\n- [ ] Frontend/backend errors captured with rich context\n- [ ] Session replay capabilities enabled\n- [ ] Improved operational awareness achieved\n\n## Technical Considerations\n\nProvides insights beyond basic logging for real-world performance monitoring.\n\n## Dependencies\n\n- Stable frontend application deployment","closedAt":null,"createdAt":"2025-06-05T16:50:45Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":56,"state":"OPEN","title":"Implement Real User Monitoring (RUM) & Enhanced Error Tracking"},{"assignees":[],"body":"## Feature Description\n\nProvide deep visibility into request flows across services for debugging performance bottlenecks and understanding system interactions.\n\n## Acceptance Criteria\n\n- [ ] OpenTelemetry SDK integrated\n- [ ] Trace context propagated across operations\n- [ ] Spans generated for key operations\n- [ ] Traces exportable to compatible backend\n- [ ] Advanced observability goals achieved\n\n## Technical Considerations\n\nAligns with advanced observability goals for distributed architecture scenarios.\n\n## Dependencies\n\n- Correlation ID Propagation\n- Structured Logging\n- Decision on distributed architecture","closedAt":"2025-06-05T19:53:59Z","createdAt":"2025-06-05T16:50:41Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":55,"state":"CLOSED","title":"Implement Distributed Tracing (e.g., OpenTelemetry)"},{"assignees":[],"body":"## Research Description\n\nExplore the potential of integrating AI/LLM capabilities to offer value-added features around the core content.\n\n## Research Goals\n\n- [ ] Identify potential AI features for content enhancement\n- [ ] Evaluate models/APIs for feasibility\n- [ ] Assess cost implications and UX benefits\n- [ ] Create proof-of-concept if warranted\n- [ ] Analyze user value proposition\n\n## Expected Outcome\n\nResearch spike with AI feature recommendations and feasibility assessment.\n\n## Timeline\n\nFuture consideration - drives innovation but not immediate priority.","closedAt":"2025-06-05T19:53:30Z","createdAt":"2025-06-05T16:50:30Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"}],"milestone":null,"number":54,"state":"CLOSED","title":"Investigate AI-Powered Features (Summarization, Analysis)"},{"assignees":[],"body":"## Research Description\n\nInvestigate feasibility of integrating content from sources beyond the initial scope to expand user appeal and application value.\n\n## Research Goals\n\n- [ ] Feasibility study for 1-2 potential new content sources\n- [ ] Technical challenges assessment\n- [ ] Legal/licensing considerations analysis\n- [ ] Effort estimates and user value evaluation\n- [ ] Future roadmap recommendations\n\n## Expected Outcome\n\nA feasibility study document outlining potential content sources with comprehensive analysis.\n\n## Timeline\n\nFuture consideration - not prioritized for immediate development cycles.","closedAt":"2025-06-05T19:53:43Z","createdAt":"2025-06-05T16:50:26Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"}],"milestone":null,"number":53,"state":"CLOSED","title":"Explore Support for Additional Content Sources"},{"assignees":[],"body":"## Feature Description\n\nAddress identified accessibility barriers based on audit findings to ensure the application is inclusive and compliant.\n\n## Acceptance Criteria\n\n- [ ] Issues identified in accessibility audit backlog are resolved\n- [ ] Changes verified via re-testing\n- [ ] WCAG 2.1 AA compliance achieved\n- [ ] Systematic resolution approach implemented\n\n## Technical Considerations\n\nEnsures application is usable by people with disabilities and meets mandatory compliance requirements.\n\n## Dependencies\n\n- Accessibility Audit Completion and Remediation Plan","closedAt":null,"createdAt":"2025-06-05T16:49:29Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":52,"state":"OPEN","title":"Remediate Accessibility Issues from Audit (WCAG 2.1 AA)"},{"assignees":[],"body":"## Feature Description\n\nImprove project visibility with CI status badge and provide clear, finalized documentation for development processes.\n\n## Acceptance Criteria\n\n- [ ] CI status badge added to README.md\n- [ ] CONTRIBUTING.md updated with final details\n- [ ] Documentation covers CI/CD, pre-commit hooks, testing, Storybook, etc.\n- [ ] Clear workflow documentation for contributors\n\n## Technical Considerations\n\nImproves project visibility and provides clear development process documentation.\n\n## Dependencies\n\n- CI/CD setup complete\n- CONTRIBUTING.md drafted","closedAt":null,"createdAt":"2025-06-05T16:49:26Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFQBGw","name":"type:docs","description":"Documentation improvements","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":51,"state":"OPEN","title":"Add CI Badge and Finalize Workflow Documentation"},{"assignees":[],"body":"## Feature Description\n\nImprove code understanding, maintainability, and IDE support by documenting interfaces and complex implementations.\n\n## Acceptance Criteria\n\n- [ ] TSDoc comments added to all exported members\n- [ ] Key complex internal functions/classes documented\n- [ ] Documentation explains purpose, params, returns, etc.\n- [ ] IDE support improved through better documentation\n\n## Technical Considerations\n\nImproves code understanding and maintainability per documentation philosophy.\n\n## Dependencies\n\n- Codebase structure stabilizing","closedAt":null,"createdAt":"2025-06-05T16:49:23Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFQBGw","name":"type:docs","description":"Documentation improvements","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"}],"milestone":null,"number":50,"state":"OPEN","title":"Add TSDoc Documentation to Public APIs & Complex Logic"},{"assignees":[],"body":"## Refactoring Goal\n\nImprove the reliability and maintainability of setup or data migration scripts.\n\n## Motivation\n\nComplex script logic needs to be broken into smaller, testable functions with enhanced logging and error handling.\n\n## Scope\n\nMigration scripts in the scripts/ directory, particularly those related to Vercel Blob migration.\n\n## Risk Assessment\n\nMedium risk due to script complexity, but improved testability reduces long-term risk.\n\n## Verification Strategy\n\n- Break complex logic into smaller, testable functions\n- Add enhanced logging and error handling\n- Implement dry-run modes\n- Add tests for script components","closedAt":null,"createdAt":"2025-06-05T16:49:00Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":49,"state":"OPEN","title":"Refactor Migration Scripts for Testability and Modularity"},{"assignees":[],"body":"## Feature Description\n\nAdd tracking references to TODO comments in the codebase to ensure visibility and accountability for technical debt.\n\n## Acceptance Criteria\n\n- [ ] Codebase scanned for TODO comments\n- [ ] Each valid TODO updated to include corresponding backlog item ID\n- [ ] Documentation on TODO tracking process\n\n## Technical Considerations\n\nTODOs without tracking are easily lost. Linking them to backlog items ensures visibility and accountability.\n\n## Dependencies\n\n- Backlog established","closedAt":"2025-06-05T19:54:18Z","createdAt":"2025-06-05T16:48:03Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"}],"milestone":null,"number":48,"state":"CLOSED","title":"Add Tracking References (Ticket IDs) to TODO Comments"},{"assignees":[],"body":"## Refactoring Goal\n\nSimplify NextResponse mocking to make tests more robust and less coupled to framework implementation details.\n\n## Motivation\n\nMocking static methods like NextResponse.json couples tests to framework implementation details, making tests more fragile.\n\n## Scope\n\nAPI test files that currently mock NextResponse.json directly.\n\n## Risk Assessment\n\nLow risk refactoring that improves test maintainability.\n\n## Verification Strategy\n\n- Ensure all existing tests continue to pass\n- Verify assertions are made on returned instance properties rather than mocked methods","closedAt":"2025-06-05T19:54:09Z","createdAt":"2025-06-05T16:47:33Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":47,"state":"CLOSED","title":"Simplify NextResponse Mocking in API Tests"},{"assignees":[],"body":"## Feature Description\n\nImprove user acquisition and communicate the project's value proposition effectively with a new landing page design.\n\n## Acceptance Criteria\n\n- [ ] New landing page with improved visual design\n- [ ] Clearer messaging and stronger calls-to-action\n- [ ] Adherence to accessibility and responsive design standards\n- [ ] Built using established Atomic Design components\n\n## Technical Considerations\n\nDrives business value and addresses potential need to enhance current landing page for clarity and engagement.\n\n## Dependencies\n\n- Foundational Atomic Design components","closedAt":null,"createdAt":"2025-06-05T16:46:52Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":46,"state":"OPEN","title":"Redesign & Implement Landing Page for Marketing/Conversion"},{"assignees":[],"body":"## Feature Description\n\nMove application content to scalable cloud storage, improving performance, reliability, and completing the Blob integration.\n\n## Acceptance Criteria\n\n- [ ] All necessary content assets stored in Vercel Blob\n- [ ] Application reads assets from Blob storage URLs  \n- [ ] Local asset storage removed\n- [ ] Migration scripts created if needed\n\n## Technical Considerations\n\nAligns with operational excellence and completes Vercel Blob integration.\n\n## Dependencies\n\n- Vercel Blob Storage Setup\n- Content generation/acquisition process","closedAt":null,"createdAt":"2025-06-05T16:45:00Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":45,"state":"OPEN","title":"Migrate Existing/Generated Content Assets to Vercel Blob"},{"assignees":[],"body":"## Description\nEnsures the application is usable by people with disabilities, meeting mandatory compliance requirements (WCAG 2.1 AA) and ethical standards per frontend philosophy.\n\n## Acceptance Criteria\n- [ ] Audit performed using automated tools and manual checks\n- [ ] WCAG 2.1 AA compliance assessment completed\n- [ ] Prioritized backlog of distinct, actionable accessibility issues created for remediation\n- [ ] Audit report with findings and recommendations\n- [ ] Remediation timeline and priority established\n\n## Technical Considerations\n- Use automated accessibility testing tools (axe, WAVE, etc.)\n- Perform manual accessibility checks\n- Test with screen readers and keyboard navigation\n- Document findings and create actionable remediation plan\n\n## Dependencies\n- Basic UI implemented for core features\n\n## Type\nFeature\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-05T15:28:12Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":44,"state":"OPEN","title":"Conduct Accessibility Audit (WCAG 2.1 AA) & Create Remediation Plan"},{"assignees":[],"body":"## Description\nExpands Storybook coverage to composite UI components, enabling isolated development, testing, and documentation per mandatory Storybook-First frontend philosophy. Improves DX.\n\n## Acceptance Criteria\n- [ ] Storybook stories created for key Molecule and Organism components\n- [ ] Stories demonstrate composition, props, various states, and interactions\n- [ ] Comprehensive documentation for component usage\n- [ ] Interactive controls for component properties\n- [ ] Visual regression testing capability\n\n## Technical Considerations\n- Create stories for molecule and organism components\n- Document component composition patterns\n- Implement interactive controls and variants\n- Ensure comprehensive coverage\n\n## Dependencies\n- Storybook Setup, Refactor Components into Atomic Molecules & Organisms\n\n## Type\nEnhancement\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-05T15:28:07Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":43,"state":"OPEN","title":"Create Storybook Stories for Core Molecules & Organisms"},{"assignees":[],"body":"## Description\nContinues mandatory implementation of Atomic Design, organizing composite components for better structure, reuse, and testability per frontend philosophy.\n\n## Acceptance Criteria\n- [ ] Existing UI components refactored and organized into molecules and organisms directories\n- [ ] Components correctly compose lower-level atoms/molecules\n- [ ] Proper component hierarchy established\n- [ ] Documentation for component organization\n- [ ] Tests updated for refactored components\n\n## Technical Considerations\n- Analyze existing components for proper categorization\n- Refactor components into molecules and organisms\n- Ensure proper composition patterns\n- Update imports and dependencies\n\n## Dependencies\n- Foundational Atomic Design Structure (Core Atoms defined)\n\n## Type\nRefactor\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-05T15:25:55Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":42,"state":"OPEN","title":"Refactor Existing Components into Atomic Molecules & Organisms"},{"assignees":[],"body":"## Description\nImproves UI resilience by catching rendering errors gracefully, preventing a full application crash for the user, enhancing UX.\n\n## Acceptance Criteria\n- [ ] React Error Boundary components implemented\n- [ ] Error boundaries wrapped around major UI layouts/sections\n- [ ] Fallback UI displayed on error\n- [ ] Errors captured and logged with proper context\n- [ ] Recovery mechanisms where possible\n\n## Technical Considerations\n- Create reusable Error Boundary components\n- Identify key UI sections for boundary placement\n- Design appropriate fallback UI\n- Integrate with structured logging\n\n## Dependencies\n- Stable UI Structure, Structured Logging\n\n## Type\nEnhancement\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-05T15:03:26Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":41,"state":"OPEN","title":"Implement React Error Boundaries for Key UI Sections"},{"assignees":[],"body":"## Description\nKeeps dependencies current with security patches and bug fixes with minimal manual effort, reducing technical debt accumulation per philosophy.\n\n## Acceptance Criteria\n- [ ] Renovate Bot or Dependabot configured\n- [ ] Automatically creates PRs for dependency updates\n- [ ] Updates verified by CI before merging\n- [ ] Proper configuration for update frequency and grouping\n- [ ] Security updates prioritized\n\n## Technical Considerations\n- Choose between Renovate and Dependabot\n- Configure update scheduling and grouping\n- Set up proper CI verification\n- Configure security update handling\n\n## Dependencies\n- Basic CI Pipeline Setup (stable)\n\n## Type\nEnhancement\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-05T14:56:34Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":40,"state":"OPEN","title":"Automate Dependency Updates (Renovate/Dependabot)"},{"assignees":[],"body":"## Description\nReduces bundle size, potential security vulnerabilities, build times, and maintenance overhead. Aligns with disciplined dependency management.\n\n## Acceptance Criteria\n- [ ] package.json reviewed using tools like depcheck\n- [ ] Unused dependencies removed\n- [ ] Report generated on potentially large dependencies\n- [ ] Dependencies justified and documented\n- [ ] Bundle size impact assessed\n\n## Technical Considerations\n- Use dependency analysis tools (depcheck, bundle-analyzer)\n- Identify and remove unused dependencies\n- Evaluate large dependency alternatives\n- Document dependency decisions\n\n## Dependencies\n- Project features stabilizing\n\n## Type\nRefactor\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-05T14:52:08Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFQGMw","name":"type:chore","description":"Maintenance tasks, dependencies, etc.","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":39,"state":"OPEN","title":"Audit and Minimize Project Dependencies"},{"assignees":[],"body":"## Description\nEnsures consistency and compatibility with POSIX tools. Minor code quality fix.\n\n## Acceptance Criteria\n- [ ] All text files end with a single newline character\n- [ ] Enforced via Prettier/EditorConfig configuration\n- [ ] Automated fixing of existing files\n- [ ] Prevention of future violations\n\n## Technical Considerations\n- Audit files missing final newlines\n- Configure Prettier/EditorConfig to enforce\n- Run automated fix across codebase\n- Update CI to catch violations\n\n## Type\nFix\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-05T01:38:32Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFQGMw","name":"type:chore","description":"Maintenance tasks, dependencies, etc.","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQGxw","name":"size:xs","description":"Very small changes (typo fixes, trivial changes)","color":"C2E0C6"}],"milestone":null,"number":38,"state":"OPEN","title":"Add Missing Newlines at End of Files"},{"assignees":[],"body":"## Description\nUsing as NextRequest for partial mocks bypasses TypeScript's checks, violating type diligence principles. Improving this increases test reliability.\n\n## Acceptance Criteria\n- [ ] Mocks used in API tests structurally match required parts of NextRequest\n- [ ] Minimize unsafe type assertions\n- [ ] Proper type safety in test mocks\n- [ ] Better test reliability and maintainability\n\n## Technical Considerations\n- Review current test mocking patterns\n- Create proper mock interfaces\n- Eliminate unsafe type assertions\n- Improve type safety without breaking tests\n\n## Type\nRefactor\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-05T01:37:13Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":37,"state":"OPEN","title":"Improve Type Safety in API Test Mocks (NextRequest)"},{"assignees":[],"body":"## Description\nDisabling no-require-imports broadly hinders ES Module adoption and hides potential issues. Fixing this aligns with philosophy principles.\n\n## Acceptance Criteria\n- [ ] Global suppression removed from ESLint configuration\n- [ ] Targeted inline suppressions with justification used only where unavoidable\n- [ ] Code refactored to use import where possible\n- [ ] Documentation of remaining require usage rationale\n\n## Technical Considerations\n- Audit current require usage across codebase\n- Convert to ES modules where possible\n- Use targeted suppressions for legitimate cases\n- Update linting configuration\n\n## Type\nRefactor\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-05T01:35:23Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP87w","name":"priority:low","description":"Low priority nice-to-have improvements","color":"FFFF00"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":36,"state":"OPEN","title":"Avoid Broad Lint Rule Suppression for require Usage"},{"assignees":[],"body":"## Description\nVitest offers significantly faster test execution, improving developer feedback loops and CI times. This is a direct improvement to Developer Experience (DX) and Automation efficiency.\n\n## Acceptance Criteria\n- [ ] Jest removed from dependencies\n- [ ] Vitest installed and configured\n- [ ] All existing tests pass using Vitest\n- [ ] CI pipeline updated to use Vitest\n- [ ] Configuration files updated\n- [ ] Performance improvements documented\n\n## Technical Considerations\n- Migrate Jest configuration to Vitest\n- Update test scripts and CI configuration\n- Ensure compatibility with existing test patterns\n- Verify performance improvements\n\n## Dependencies\n- Existing test suite\n\n## Type\nRefactor\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-05T01:35:09Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":35,"state":"OPEN","title":"Migrate from Jest to Vitest"},{"assignees":[],"body":"## Description\nProvides clear guidelines for contributors, streamlining onboarding and ensuring consistency in development practices per philosophy. Improves DX.\n\n## Acceptance Criteria\n- [ ] Detailed CONTRIBUTING.md file covering project setup\n- [ ] Development workflow documentation (pre-commit hooks, Storybook)\n- [ ] Coding standards and conventions\n- [ ] Testing strategy guidelines\n- [ ] Commit conventions and PR process\n- [ ] Links to key resources and documentation\n\n## Technical Considerations\n- Document current development processes\n- Include setup instructions for new contributors\n- Reference existing tooling and workflows\n- Keep documentation current and maintainable\n\n## Dependencies\n- Key processes (CI, Commitlint, Testing Strategy, Storybook) established\n\n## Type\nDocumentation\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-04T22:54:21Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFQBGw","name":"type:docs","description":"Documentation improvements","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"}],"milestone":null,"number":34,"state":"OPEN","title":"Create Comprehensive CONTRIBUTING.md"},{"assignees":[],"body":"## Feature Description\n\nDevelop the primary user interface for core application features: finding books and viewing content. This is the foundation of the user experience.\n\n## Acceptance Criteria\n\n- [ ] Book browsing interface with cover images and metadata\n- [ ] Book search and filtering functionality\n- [ ] Content display with text and audio synchronization\n- [ ] Loading/error state management with user feedback\n- [ ] Responsive design for all device sizes\n- [ ] Accessibility compliance (WCAG 2.1 AA basics)\n- [ ] Performance optimization for content loading\n\n## Technical Considerations\n\nThis is the core user interface that drives business value and user adoption. Should be built using Atomic Design components for consistency and reusability.\n\n## Dependencies\n\n- Foundational Atomic Design Structure (#23)\n- Vercel Blob Storage Setup (#25) \n- Search Functionality (#59)\n\n## Technical Debt\n\nCurrent exploration page is minimal and needs comprehensive enhancement to support the full book discovery and reading experience.","closedAt":null,"createdAt":"2025-06-04T22:53:01Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":33,"state":"OPEN","title":"Develop UI for Book Selection & Content Display"},{"assignees":[],"body":"## Description\nVerifies core application functionality from a user's perspective (e.g., search, select book, view content), ensuring key journeys work reliably. Fulfills mandatory E2E testing requirement.\n\n## Acceptance Criteria\n- [ ] Automated E2E tests covering primary user flows implemented\n- [ ] Tests cover book selection and content viewing\n- [ ] Tests integrated into CI pipeline\n- [ ] Tests run against preview deployments or test environment\n- [ ] Proper test data management\n\n## Technical Considerations\n- Identify critical user journeys\n- Implement comprehensive E2E test coverage\n- Set up test environment and data management\n- Integrate with CI/CD pipeline\n\n## Dependencies\n- E2E Testing Framework Setup, Core Application Features (UI for selection, content view)\n\n## Type\nFeature\n\n## Complexity\nComplex","closedAt":null,"createdAt":"2025-06-04T22:05:28Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQKrA","name":"size:l","description":"Large changes (significant refactoring, complex features)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":32,"state":"OPEN","title":"Implement E2E Tests for Critical User Flows"},{"assignees":[],"body":"## Description\nProvides the tooling foundation for verifying critical user journeys end-to-end, building confidence in application behavior as required by the frontend testing strategy.\n\n## Acceptance Criteria\n- [ ] E2E testing framework (e.g., Playwright) installed and configured\n- [ ] Integration into package.json scripts\n- [ ] Basic setup structure established\n- [ ] CI integration capability\n- [ ] Test environment configuration\n\n## Technical Considerations\n- Choose between Playwright and Cypress based on project needs\n- Configure for Next.js application\n- Set up proper test environment handling\n- Plan CI integration strategy\n\n## Dependencies\n- Basic CI Pipeline Setup, A deployable version of the application\n\n## Type\nFeature\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T22:04:33Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":31,"state":"OPEN","title":"Setup Comprehensive E2E Testing Framework (Playwright/Cypress)"},{"assignees":[],"body":"## Description\nMaintains code quality by ensuring adequate test coverage and preventing regressions. Mandatory per Testing Strategy in philosophy.\n\n## Acceptance Criteria\n- [ ] Test runner configured for coverage reports\n- [ ] CI pipeline fails if coverage drops below predefined thresholds (e.g., 85%)\n- [ ] Coverage reports generated and accessible\n- [ ] Proper configuration for different file types\n- [ ] Coverage badges or reporting integration\n\n## Technical Considerations\n- Configure Jest/test runner for coverage reporting\n- Set appropriate coverage thresholds\n- Integrate coverage checks into CI pipeline\n- Set up coverage reporting\n\n## Dependencies\n- Basic CI Pipeline Setup, Test suite implementation\n\n## Type\nEnhancement\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-04T22:04:19Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":30,"state":"OPEN","title":"Enforce Test Coverage Thresholds in CI"},{"assignees":[],"body":"## Description\nProvides consistent, predictable error communication, improving client-side handling and DX, per philosophy's Consistent Error Handling principle.\n\n## Acceptance Criteria\n- [ ] Centralized error handling mechanism catches errors\n- [ ] Errors logged with correlation ID\n- [ ] Standardized JSON error responses with appropriate HTTP status codes\n- [ ] Consistent error format across all API endpoints\n- [ ] Proper error categorization and messaging\n\n## Technical Considerations\n- Create centralized error handling middleware\n- Define standard error response format\n- Implement proper logging integration\n- Handle different error types appropriately\n\n## Dependencies\n- Structured Logging, Correlation ID Propagation\n\n## Type\nEnhancement\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T22:03:51Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQPNA","name":"domain:api","description":"API-related changes","color":"5319E7"}],"milestone":null,"number":29,"state":"OPEN","title":"Standardize API Error Handling and Responses"},{"assignees":[],"body":"## Description\nEnhances security and system robustness by preventing invalid or malicious data entry. A core Security Consideration.\n\n## Acceptance Criteria\n- [ ] Input validation libraries (e.g., Zod) applied to all API route handlers or service layers\n- [ ] Schemas define expected types, formats, constraints\n- [ ] Standardized validation errors returned\n- [ ] Proper error handling for validation failures\n- [ ] Security-focused validation rules\n\n## Technical Considerations\n- Choose and integrate validation library (Zod recommended)\n- Create validation schemas for all API endpoints\n- Implement consistent error handling\n\n## Dependencies\n- Standardize API Error Handling and Responses\n\n## Type\nEnhancement\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T22:03:32Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQPNA","name":"domain:api","description":"API-related changes","color":"5319E7"}],"milestone":null,"number":28,"state":"OPEN","title":"Implement Robust Input Validation in API Routes"},{"assignees":[],"body":"## Description\nImproves security, deployment flexibility, and adheres to Twelve-Factor App principles. Mandatory per Configuration Management philosophy section.\n\n## Acceptance Criteria\n- [ ] All configuration values loaded strictly from environment variables\n- [ ] .env files used for local development defaults\n- [ ] .env.local ignored in version control\n- [ ] Strongly-typed config objects populated from environment variables\n- [ ] Validation for required environment variables\n\n## Technical Considerations\n- Audit current configuration usage\n- Create strongly-typed configuration objects\n- Implement environment variable validation\n- Update documentation\n\n## Type\nEnhancement\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T22:02:15Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":27,"state":"OPEN","title":"Externalize All Environment-Specific Configuration"},{"assignees":[],"body":"## Description\nAdds static analysis security testing (SAST) to automatically detect potential vulnerabilities, improving security posture per philosophy.\n\n## Acceptance Criteria\n- [ ] GitHub Actions workflow includes CodeQL analysis step\n- [ ] CodeQL scanning runs on push/PR\n- [ ] Findings trigger alerts or notifications\n- [ ] Proper configuration for JavaScript/TypeScript\n- [ ] Security alerts integrated into workflow\n\n## Technical Considerations\n- Add CodeQL workflow to GitHub Actions\n- Configure for JavaScript/TypeScript codebase\n- Set up proper alert handling\n\n## Dependencies\n- Basic CI Pipeline Setup\n\n## Type\nEnhancement\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-04T22:00:32Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":26,"state":"OPEN","title":"Configure CodeQL Security Scanning in CI"},{"assignees":[],"body":"## Feature Description\n\nConfigure and verify Vercel Blob storage setup as the foundation for all asset management and content delivery in the application.\n\n## Acceptance Criteria\n\n- [ ] Vercel Blob storage provisioned and configured\n- [ ] BLOB_READ_WRITE_TOKEN secured via environment variables\n- [ ] Connection verification and health checks\n- [ ] Asset upload/download functionality tested\n- [ ] Error handling for blob operations\n- [ ] Documentation updated in docs/BLOB_STORAGE.md\n\n## Technical Considerations\n\nThis is CRITICAL infrastructure that blocks most other features. All content delivery, asset management, and migration depends on this foundation being properly established.\n\n## Dependencies\n\n- Environment variable management\n- Production deployment configuration\n\n## Blocks\n\nThis issue blocks:\n- Content Management System (#58)\n- Asset migration completion (#45)\n- All content-related features","closedAt":null,"createdAt":"2025-06-04T21:54:34Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7CQ","name":"priority:critical","description":"Critical issues requiring immediate attention","color":"FF0000"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":25,"state":"OPEN","title":"Configure and Verify Vercel Blob Storage Setup"},{"assignees":[],"body":"## Description\nEnables the mandatory Storybook-First workflow defined in the frontend philosophy. Provides isolated component development, visual documentation, and testing capabilities for UI primitives. Improves DX.\n\n## Acceptance Criteria\n- [ ] Storybook installed, configured, and integrated\n- [ ] Stories (*.stories.tsx) demonstrating props, states, and variants created for all core Atom components\n- [ ] Storybook build potentially integrated into CI\n- [ ] Documentation for component usage\n- [ ] Proper addon configuration\n\n## Technical Considerations\n- Install and configure Storybook for React/Next.js\n- Create comprehensive stories for atom components\n- Set up proper build pipeline integration\n\n## Dependencies\n- Foundational Atomic Design Structure (Core Atoms defined)\n\n## Type\nFeature\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T21:52:41Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":24,"state":"OPEN","title":"Setup Storybook & Create Stories for Core Atoms"},{"assignees":[],"body":"## Description\nEstablishes the mandatory Atomic Design component structure required by the frontend philosophy, promoting UI consistency, reusability, and maintainability. Foundational for scalable UI development.\n\n## Acceptance Criteria\n- [ ] Components directory restructured into atoms, molecules, organisms\n- [ ] Foundational UI primitives (Button, Input, Text, Label, etc.) created/refactored as Atoms within /atoms\n- [ ] Components adhere to styling standards (Tailwind)\n- [ ] Basic accessibility compliance implemented\n- [ ] Proper TypeScript interfaces and props\n\n## Technical Considerations\n- Restructure existing components directory\n- Create foundational atom components\n- Ensure accessibility and styling consistency\n- Follow TypeScript best practices\n\n## Type\nRefactor\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:37:08Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":23,"state":"OPEN","title":"Implement Foundational Atomic Design Structure (Folders & Core Atoms)"},{"assignees":[],"body":"## Description\nMandatory per philosophy's Logging Strategy for tracing requests across asynchronous operations, crucial for debugging complex flows and effective structured logging. Enables future distributed tracing.\n\n## Acceptance Criteria\n- [ ] Unique correlation ID generated for each incoming API request/job\n- [ ] Correlation ID reliably propagated (e.g., via AsyncLocalStorage) through all operations\n- [ ] Correlation ID included in all related structured log entries\n- [ ] Proper async context handling\n\n## Technical Considerations\n- Implement AsyncLocalStorage for Node.js context propagation\n- Integrate with API middleware\n- Ensure correlation ID flows through all async operations\n\n## Dependencies\n- Structured Logging Implementation\n\n## Type\nEnhancement\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:35:54Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":22,"state":"OPEN","title":"Implement Correlation ID Propagation"},{"assignees":[],"body":"## Description\nCleans up codebase by removing the explicitly deprecated /translate functionality (API, UI, tests), reducing complexity, maintenance overhead, and potential security surface. Aligns with Simplicity First principle.\n\n## Acceptance Criteria\n- [ ] All code related to /translate feature completely removed\n- [ ] Tests for translation functionality removed\n- [ ] UI components for translation removed  \n- [ ] API routes for translation removed\n- [ ] Documentation references cleaned up\n- [ ] No broken references remain\n\n## Technical Considerations\n- Identify all translation-related code\n- Safely remove without breaking other functionality\n- Update any dependent code or tests\n\n## Type\nRefactor\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:30:50Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQPNA","name":"domain:api","description":"API-related changes","color":"5319E7"}],"milestone":null,"number":21,"state":"OPEN","title":"Remove Deprecated Translation Functionality"},{"assignees":[],"body":"## Description\nMandatory per philosophy's Logging Strategy for effective debugging, monitoring, and analysis in deployed environments. Replaces unreliable console.log with parseable, contextual logs. Foundational for operational excellence.\n\n## Acceptance Criteria\n- [ ] Standard structured logging library (e.g., Pino) integrated\n- [ ] All operational console.* calls replaced with logger calls\n- [ ] Logs output JSON with mandatory fields (timestamp, level, message, service_name, correlation_id) in relevant environments\n- [ ] Proper log levels implemented\n\n## Technical Considerations\n- Choose and integrate structured logging library\n- Replace all console statements\n- Configure proper log formatting and levels\n\n## Dependencies\n- Implement Correlation ID Propagation\n\n## Type\nEnhancement\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:28:39Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP8LQ","name":"priority:medium","description":"Medium priority issues for planning","color":"FFCC00"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":20,"state":"OPEN","title":"Implement Structured Logging (JSON) & Remove Console Statements"},{"assignees":[],"body":"## Description\nMaximizes type safety, catching potential errors at compile time and improving code quality and maintainability. Mandatory per TypeScript appendix philosophy (strict: true).\n\n## Acceptance Criteria\n- [ ] tsconfig.json configured with strict: true\n- [ ] Other recommended strictness flags enabled\n- [ ] All resulting TypeScript errors across the codebase are resolved\n- [ ] Build process works with strict configuration\n\n## Technical Considerations\n- Update tsconfig.json with strict settings\n- Fix all TypeScript errors that arise\n- Ensure compatibility with existing code\n\n## Type\nEnhancement\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:28:27Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"}],"milestone":null,"number":19,"state":"OPEN","title":"Enforce Strict TypeScript Configuration"},{"assignees":[],"body":"## Description\nImproves maintainability, testability, and adheres to architectural principles (Separation of Concerns, Dependency Inversion) by decoupling business logic from framework-specific routing. Essential for testability without internal mocking.\n\n## Acceptance Criteria\n- [ ] Business logic extracted from API route handlers into dedicated, framework-agnostic, testable service functions/classes/modules\n- [ ] Route handlers become thin controllers responsible only for request/response mapping and calling services\n- [ ] Improved testability and maintainability\n- [ ] Clear separation between routing and business logic\n\n## Technical Considerations\n- Extract business logic into service layer\n- Create proper abstractions and interfaces\n- Update tests to work with new architecture\n\n## Type\nRefactor\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:22:07Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQPNA","name":"domain:api","description":"API-related changes","color":"5319E7"}],"milestone":null,"number":18,"state":"OPEN","title":"Refactor API Routes for Clear Separation of Concerns"},{"assignees":[],"body":"## Description\nThe current Download API test mocks an internal utility (@/utils), violating the critical philosophy rule against mocking internal collaborators. This creates brittle tests and requires immediate refactoring for reliable testing and adherence to Dependency Inversion.\n\n## Acceptance Criteria\n- [ ] GET route handler accepts dependencies like getAssetUrlWithFallback via constructor/parameter injection\n- [ ] Test injects the real utility or a controlled fake implementation conforming to an interface\n- [ ] Direct mock of @/utils is removed\n- [ ] Tests are more reliable and follow dependency inversion principles\n\n## Technical Considerations\n- Refactor API route handlers for dependency injection\n- Create proper interfaces for dependencies\n- Update test implementation\n\n## Dependencies\n- Potentially: Refactor API Routes for Clear Separation of Concerns\n\n## Type\nRefactor\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:21:54Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFQAiw","name":"type:refactor","description":"Code improvements without behavior change","color":"6F42C1"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQOsA","name":"domain:backend","description":"Backend changes","color":"5319E7"},{"id":"LA_kwDONlJsZM8AAAACCFQPNA","name":"domain:api","description":"API-related changes","color":"5319E7"}],"milestone":null,"number":17,"state":"OPEN","title":"Eliminate Internal Service Mocking in API Tests via Dependency Injection"},{"assignees":[],"body":"## Description\nProtects the primary branch (master/main) from direct pushes and ensures mandatory quality checks (CI, reviews) pass before merging. Enforces workflow standards and operational stability per philosophy.\n\n## Acceptance Criteria\n- [ ] Main branch requires Pull Requests\n- [ ] Passing CI status checks required (linting, tests, build)\n- [ ] Minimum number of reviewer approvals (e.g., 1)\n- [ ] Prevents force pushes\n- [ ] Requires linear history\n\n## Technical Considerations\n- Configure GitHub branch protection rules\n- Set up required status checks\n- Define reviewer requirements\n\n## Dependencies\n- Basic CI Pipeline Setup\n\n## Type\nFeature\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-04T20:21:40Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":16,"state":"OPEN","title":"Configure Branch Protection Rules for Main Branch"},{"assignees":[],"body":"## Description\nEnforces the mandatory Conventional Commits standard for consistent history, enabling automated changelog generation, semantic versioning, and clearer code evolution tracking per philosophy.\n\n## Acceptance Criteria\n- [ ] Commitlint installed and configured\n- [ ] commit-msg Husky hook configured\n- [ ] Commits not adhering to Conventional Commits standard are rejected\n- [ ] Configuration follows project standards\n\n## Technical Considerations\n- Install and configure commitlint\n- Set up commit-msg hook with Husky\n- Define appropriate commit message rules\n\n## Dependencies\n- Husky Setup\n\n## Type\nFeature\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-04T20:19:26Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":15,"state":"OPEN","title":"Setup Commitlint for Conventional Commits Enforcement"},{"assignees":[],"body":"## Description\nProvides immediate feedback to developers locally, enforcing code style (Prettier) and quality standards (ESLint strict) before commits reach the repository. Reduces CI failures and improves DX, as mandated by philosophy's automation principles.\n\n## Acceptance Criteria\n- [ ] Husky v9+ and lint-staged installed and configured\n- [ ] Pre-commit hook automatically runs Prettier formatter on staged files\n- [ ] Pre-commit hook runs ESLint (lint:strict) on staged files\n- [ ] Commits with violations are prevented\n- [ ] prepare script ensures hooks installation\n\n## Technical Considerations\n- Install and configure Husky v9+\n- Set up lint-staged configuration\n- Configure pre-commit hooks properly\n\n## Dependencies\n- Prettier & ESLint configured\n\n## Type\nFeature\n\n## Complexity\nSimple","closedAt":null,"createdAt":"2025-06-04T20:19:10Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQHNQ","name":"size:s","description":"Small changes (single file, simple logic)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":14,"state":"OPEN","title":"Setup Husky & Lint-Staged for Pre-commit Quality Checks"},{"assignees":[],"body":"## Description\nEstablishes the foundational automated quality gates required by the development philosophy, ensuring code consistency, reducing manual effort, and enabling reliable deployments. Foundational for technical excellence.\n\n## Acceptance Criteria\n- [ ] Functional .github/workflows/ci.yml triggering on push/PR to main branch\n- [ ] Workflow installs dependencies with caching\n- [ ] Runs linters (lint:strict)\n- [ ] Executes tests (npm test)\n- [ ] Verifies application build (npm run build) completes successfully\n\n## Technical Considerations\n- Set up GitHub Actions workflow\n- Configure dependency caching\n- Ensure proper error handling and reporting\n\n## Dependencies\n- Linting, Testing, Build scripts defined in package.json\n\n## Type\nFeature\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:18:58Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_Zw","name":"type:feature","description":"New functionality","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":13,"state":"OPEN","title":"Implement Basic GitHub Actions CI Workflow (Lint, Test, Build)"},{"assignees":[],"body":"## Description\nUsing --legacy-peer-deps masks underlying dependency incompatibilities, risking runtime errors and violating disciplined dependency management principles. Resolving conflicts ensures a stable and reliable build.\n\n## Acceptance Criteria\n- [ ] npm ci runs successfully without the --legacy-peer-deps flag\n- [ ] All peer dependency conflicts identified and resolved\n- [ ] Dependencies updated or version adjustments made as necessary\n- [ ] Build process remains stable\n\n## Technical Considerations\n- Investigate current peer dependency conflicts\n- Update dependencies to compatible versions\n- Test build process thoroughly after changes\n\n## Type\nFix\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:14:19Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFQGMw","name":"type:chore","description":"Maintenance tasks, dependencies, etc.","color":"0075CA"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":12,"state":"OPEN","title":"Resolve Dependency Conflicts (Remove --legacy-peer-deps)"},{"assignees":[],"body":"## Description\nRunning non-strict linting allows code quality issues to accumulate, violating mandatory coding standards. Enforcing lint:strict is essential for maintainability and technical excellence.\n\n## Acceptance Criteria\n- [ ] CI step changed from npm run lint to npm run lint:strict\n- [ ] All existing lint errors/warnings violating the strict configuration are fixed across the codebase\n- [ ] Pre-commit hooks updated accordingly\n\n## Technical Considerations\n- Review all lint:strict violations\n- Fix each violation following project coding standards\n- Update CI and pre-commit configurations\n\n## Dependencies\n- Related to: Re-enable and Stabilize CI Quality Gates\n\n## Type\nFix\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:14:08Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_nQ","name":"type:bug","description":"Bug fixes","color":"D73A4A"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":11,"state":"OPEN","title":"Enforce Strict Linting in CI & Address Violations"},{"assignees":[],"body":"## Description\nThe CI pipeline currently bypasses mandatory quality checks (lint:strict, npm test). This violates fundamental quality gate principles and allows technical debt accumulation. Re-enabling is critical for code reliability and adherence to development philosophy.\n\n## Acceptance Criteria\n- [ ] CI configuration (.github/workflows/ci.yml) updated to execute npm run lint:strict\n- [ ] CI configuration updated to execute npm test\n- [ ] Pipeline fails if these checks do not pass\n- [ ] Pre-existing issues preventing this are addressed\n\n## Technical Considerations\n- Review current CI configuration\n- Identify and fix any lint:strict violations\n- Ensure all tests pass\n- Update workflow configuration\n\n## Dependencies\n- Fix: Enforce Strict Linting in CI & Address Violations\n- Fix: Resolve Dependency Conflicts\n- Refactor: Eliminate Internal Service Mocking in Tests via Dependency Injection\n\n## Type\nFix\n\n## Complexity\nMedium","closedAt":null,"createdAt":"2025-06-04T20:13:54Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_nQ","name":"type:bug","description":"Bug fixes","color":"D73A4A"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQQSw","name":"domain:infra","description":"Infrastructure changes","color":"5319E7"}],"milestone":null,"number":10,"state":"OPEN","title":"Re-enable and Stabilize CI Quality Gates (Tests and Strict Linting)"},{"assignees":[],"body":"## Bug Description\n\nAudio player waveform currently does not support scrubbing functionality, limiting user interaction with audio content and significantly impacting the core user experience.\n\n## Steps to Reproduce\n\n1. Navigate to any reading room page with audio\n2. Attempt to click on waveform to seek to specific position\n3. Observe that waveform does not respond to user interaction\n\n## Expected Behavior\n\nUsers should be able to click on any point in the waveform to seek to that position in the audio, with visual feedback and smooth seeking.\n\n## Current Behavior\n\nWaveform is displayed but does not respond to user interaction for seeking.\n\n## Technical Considerations\n\nThis is a critical UX issue that directly impacts the core value proposition of synchronized reading and audio. Should be prioritized as it affects user satisfaction with the primary feature.\n\n## Acceptance Criteria\n\n- [ ] Clickable waveform with visual feedback\n- [ ] Smooth audio seeking to clicked position\n- [ ] Progress indicator updates correctly\n- [ ] Keyboard accessibility for waveform navigation\n- [ ] Touch support for mobile devices\n\n## Dependencies\n\n- AudioPlayer component analysis and refactoring","closedAt":null,"createdAt":"2025-06-04T20:09:34Z","labels":[{"id":"LA_kwDONlJsZM8AAAACCFP7xA","name":"priority:high","description":"High priority issues for current iteration","color":"FF9900"},{"id":"LA_kwDONlJsZM8AAAACCFP_nQ","name":"type:bug","description":"Bug fixes","color":"D73A4A"},{"id":"LA_kwDONlJsZM8AAAACCFQJ7A","name":"size:m","description":"Medium changes (multiple files, moderate complexity)","color":"C2E0C6"},{"id":"LA_kwDONlJsZM8AAAACCFQLxQ","name":"domain:frontend","description":"Frontend changes","color":"5319E7"}],"milestone":null,"number":9,"state":"OPEN","title":"Fix audio player waveform, enabling scrubbing"}]
